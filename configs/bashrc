# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}$(who|wc -l)!$(date +%H%M%S),\[\033[1;32m\]\u\[\033[00m\]@\h\[\033[00m\]:\[\033[01;34m\]\W:$(ls|col|wc -l)\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
#alias ll='ls -alF'
#alias la='ls -A'
#alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
function mkd() { mkdir -p -- "$1" && cd -P -- "$_"; }
alias ls='ls --color=auto'
alias ll='ls -lha'
alias cd..='cd ..'
alias ..='cd ..'
alias ...='cd ../../../'
alias grep='grep --color=auto'
alias mkdir='mkdir -pv'
alias mount='mount |column -t'
alias h='history'
alias now='date +"%T"'
alias vi=vim
alias ports='netstat -tulanp'
alias apt-get="sudo apt-get"
alias update="sudo apt-get update --yes"
alias upgrade="sudo apt-get upgrade --yes"
alias search='sudo aptitude search'
alias install='sudo aptitude install'
alias arestart='sudo /etc/init.d/apache2 restart'
alias meminfo='free -m -l -t'
alias psmem='ps auxf | sort -nr -k 4'
alias pscpu='ps auxf | sort -nr -k 3'
alias wget='wget -c'
alias df='df -H'
alias top='atop'
alias killgvfs='ps aux|grep gvfs|cut -d " " -f 2,2|tr "\n" " "| xargs sudo kill -9'
alias files='du | grep -v "/$" | sort -rh | more'
alias pai='cd ~/Documents/dev/cvs/01-Aplicacao/pai_novo/'
alias ativ='cd ~/Documents/dev/zend/ativ/'
alias pv='cd ~/Documents/dev/processoverde/'
alias dev='cd ~/Documents/dev/'
alias ans='cd ~/Documents/dev/ans'
alias pentaho='cd ~/Documents/dev/pentaho'
alias bashrc='vim ~/.bashrc'
alias sarmon='ssh nilson@sarmon.spo.serpro'
alias sarserpro='ssh nilson@sar.serpro'
alias gnq='ssh root@10.200.176.173'
alias pvdes='ssh opdes@10.39.17.130'
alias ubashrc='source ~/.bashrc'
alias pyserver='python -m SimpleHTTPServer'
export JAVA_HOME=/usr/lib/jvm/java-8-oracle
export PATH=/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
export PATH=$PATH:$HOME/.config/composer/vendor/bin/
source ~/.nvm/nvm.sh

METEOR_ALLOW_SUPERUSER=1
